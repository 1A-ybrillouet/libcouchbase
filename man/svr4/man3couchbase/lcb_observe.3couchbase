'\" t
.\"     Title: lcb_observe
.\"    Author: Trond Norbye <trond.norbye@couchbase.com>
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/01/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "LCB_OBSERVE" "3couchbase" "08/01/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
lcb_observe \- get key information
.SH "SYNOPSIS"
.sp
cc [ flag \&... ] file\&... \-lcouchbase [ library \&... ]
.sp
.nf
#include <libcouchbase\&.h>
.fi
.sp
.nf
lcb_error_t lcb_observe(lcb_t instance,
                        const void *command_cookie,
                        lcb_size_t num,
                        const lcb_observe_cmd_t *const *commands);
.fi
.SH "DESCRIPTION"
.sp
lcb_observe() is used to get information about a key from nodes in the cluster\&. Typically, this will be used to get information about whether or not a given document for a key has been persisted, but it may also assist in determining if a specific key and CAS value for a document are the same across multiple servers, indicating it has been replicated\&. If the library instance is using asynchronous mode (the default) this operation will return immediately and schedule the operations to be executed by the event loop, otherwise it will block until all commands are executed\&. command_cookie is is an opaque field that will be provided to the callback function\&. num is the number of entries in the commands array\&.
.sp
lcb_observe_cmd_t is a structure defined in <libcouchbase/arguments\&.h>:
.sp
.if n \{\
.RS 4
.\}
.nf
typedef struct lcb_observe_cmd_t {
    int version;              /* The enty in "v" to use */
    union {
        struct {
             const void *key; /* The key to request information for */
             lcb_size_t nkey; /* Lenght of the key */
             const void *hashkey; /* Key used to locate server (if !NULL) */
             lcb_size_t nhashkey; /* length of hash key */
        } v0;
    } v;
};
.fi
.if n \{\
.RE
.\}
.sp
Upon completion the observe callback as set by lcb_set_observe_callback(3couchbase) is called\&. The callback is called multiple times\&. See lcb_set_observe_callback(3couchbase) for more information about observe callbacks\&.
.SH "RETURN VALUES"
.sp
lcb_version() returns the LCB_SUCCESS on success, or a specific error code upon failure\&. See lcb_strerror(3couchbase) for more information\&.
.SH "EXAMPLES"
.sp
.if n \{\
.RS 4
.\}
.nf
#include <libcouchbase/couchbase\&.h>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
\&.\&.\&.
lcb_t instance;
\&.\&.\&.
lcb_observe_cmd_t *observe = calloc(1, sizeof(*observe));
observe\->version = 0;
observe\->v\&.v0\&.key = "my\-key";
observe\->v\&.v0\&.nkey = strlen(observe\->v\&.v0\&.key);
lcb_observe_cmd_t* commands[] = { observe };
lcb_observe(instance, NULL, 1, commands);
\&.\&.\&.
.fi
.if n \{\
.RE
.\}
.SH "ATTRIBUTES"
.sp
See lcb_attributes(5) for descriptions of the following attributes:
.TS
allbox tab(:);
ltB ltB.
T{
ATTRIBUTE TYPE
T}:T{
ATTRIBUTE VALUE
T}
.T&
lt lt
lt lt.
T{
.sp
Interface Stability
T}:T{
.sp
Committed
T}
T{
.sp
MT\-Level
T}:T{
.sp
MT\-Safe
T}
.TE
.sp 1
.SH "SEE ALSO"
.sp
libcouchbase(3LIB), lcb_get_observe_callback(3couchbase), lcb_set_observe_callback(3couchbase), lcb_attributes(5)
.SH "AUTHOR"
.PP
\fBTrond Norbye\fR <\&trond\&.norbye@couchbase\&.com\&>
.RS 4
Author.
.RE
