= lcb_observe(3couchbase)
:doctype: manpage
Trond Norbye <trond.norbye@couchbase.com>

NAME
----
lcb_observe - get key information

SYNOPSIS
--------
cc [ flag ... ] file... -lcouchbase [ library ... ]

    #include <libcouchbase/couchbase.h>

    lcb_error_t lcb_observe(lcb_t instance,
                            const void *command_cookie,
                            lcb_size_t num,
                            const lcb_observe_cmd_t *const *commands);

DESCRIPTION
-----------

lcb_observe() is used to get information about a key from nodes in the
cluster. Typically, this will be used to get information about whether
or not a given document for a key has been persisted, but it may also
assist in determining if a specific key and CAS value for a document
are the same across multiple servers, indicating it has been replicated.
If the library instance is using asynchronous mode (the
default) this operation will return immediately and schedule the
operations to be executed by the event loop, otherwise it will block
until all commands are executed. command_cookie is is an opaque field
that will be provided to the callback function.  num is the number of
entries in the commands array.

lcb_observe_cmd_t is a structure defined in <libcouchbase/arguments.h>:

    typedef struct lcb_observe_cmd_t {
        int version;              /* The enty in "v" to use */
        union {
            struct {
                 const void *key; /* The key to request information for */
                 lcb_size_t nkey; /* Lenght of the key */
                 const void *hashkey; /* Key used to locate server (if !NULL) */
                 lcb_size_t nhashkey; /* length of hash key */
            } v0;
        } v;
    };

Upon completion the observe callback as set by
lcb_set_observe_callback(3couchbase) is called.  The callback is
called multiple times. See lcb_set_observe_callback(3couchbase) for
more information about observe callbacks.

RETURN VALUES
-------------

lcb_version() returns the LCB_SUCCESS on success, or a specific error
code upon failure. See lcb_strerror(3couchbase) for more information.

EXAMPLES
--------
         #include <libcouchbase/couchbase.h>

         ...
         lcb_t instance;
         ...
         lcb_observe_cmd_t *observe = calloc(1, sizeof(*observe));
         observe->version = 0;
         observe->v.v0.key = "my-key";
         observe->v.v0.nkey = strlen(observe->v.v0.key);
         lcb_observe_cmd_t* commands[] = { observe };
         lcb_observe(instance, NULL, 1, commands);
         ...

ATTRIBUTES
----------
See lcb_attributes(5) for descriptions of the following attributes:

[options="header"]
|=======================================
| ATTRIBUTE TYPE      | ATTRIBUTE VALUE
| Interface Stability | Committed
| MT-Level            | MT-Safe
|=======================================

SEE ALSO
--------
libcouchbase(3LIB), lcb_get_observe_callback(3couchbase),
lcb_set_observe_callback(3couchbase), lcb_attributes(5)
