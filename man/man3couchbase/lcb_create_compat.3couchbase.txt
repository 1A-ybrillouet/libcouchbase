= lcb_create_compat(3couchbase)
:doctype: manpage
Trond Norbye <trond.norbye@couchbase.com>

NAME
----
lcb_create_compat - Create instance

SYNOPSIS
--------
cc [ flag ... ] file... -lcouchbase [ library ... ]
#include <libcouchbase.h>

lcb_error_t lcb_create_compat(lcb_cluster_t type,
                              const void *specific,
                              lcb_t *instance,
                              struct lcb_io_opt_st *io);

DESCRIPTION
-----------

lcb_create_compat creates an instance of libcouchbase to be used
without a Couchbase cluster.

The +type+ parameter specifices the type of compatibility backend to
use. Currently this must be set to +LCB_MEMCACHED_CLUSTER+.

The content of the +specific+ parameter depends on the +type+
parameter. For +LCB_MEMCACHED_CLUSTER+ the +spesific+ parameter points
to a struct lcb_memcached_st:

    struct lcb_memcached_st {
        const char *serverlist;
        const char *username;
        const char *password;
    };

The +serverlist+ is a list of server separated with a
semicolon. +username+ and +password+ may be specified to use SASL
authentication to the memcached cluster.

See lcb_create() for more information about the +instance+ and +io+
parameter.

RETURN VALUES
-------------
lcb_create() returns the LCB_SUCCESS on success, or a specific error
code upon failure. See lcb_strerror(3couchbase) for more information.

EXAMPLES
--------

    struct lcb_memcached_st memcached;
    lcb_t instance;
    lcb_error_t err;

    memset(&memcached, 0, sizeof(memcached));
    memcached.serverlist = "localhost:11211;localhost:11212";

    err = lcb_create_compat(LCB_MEMCACHED_CLUSTER, &memcached,
                            &instance, NULL);
    if (err != LCB_SUCCESS) {
        ... error ...
    }

ATTRIBUTES
----------
See lcb_attributes(5) for descriptions of the following attributes:

[options="header"]
|=======================================
| ATTRIBUTE TYPE      | ATTRIBUTE VALUE
| Interface Stability | Committed
| MT-Level            | MT-Safe
|=======================================

SEE ALSO
--------
libcouchbase(3lib), lcb_create(3couchbase),
lcb_create_io_ops(3couchbase), lcb_attributes(5)
