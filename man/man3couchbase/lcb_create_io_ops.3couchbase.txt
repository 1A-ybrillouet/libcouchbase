= lcb_create_io_ops(3couchbase)
:doctype: manpage
Trond Norbye <trond.norbye@couchbase.com>

NAME
----
lcb_create_io_ops - Create IO ops instance

SYNOPSIS
--------
cc [ flag ... ] file... -lcouchbase [ library ... ]

    #include <libcouchbase/couchbase.h>

    lcb_error_t lcb_create_io_ops(lcb_io_opt_t *op,
                                  const struct lcb_create_io_ops_st *options);

DESCRIPTION
-----------
lcb_create_io_ops() is used to create an instance of the IO operations
to use from libcouchbase. The newly created IO operation structure is
returned in the +op+ parameter.

+lcb_create_io_ops_st+ is defined in <libcouchbase/arguments.h> and
looks like:

    struct lcb_create_io_ops_st {
        int version;
        union {
            struct {
                lcb_io_ops_type_t type;
                void *cookie;
            } v0;
            struct {
                const char *sofile;
                const char *symbol;
                void *cookie;
            } v1;
        } v;
    };

The +version+ member specifies which entry in +v+ to use. +v0+ is the
simplest version that allows you to specify a predefined version to
use:

    LCB_IO_OPS_DEFAULT    Use the default IO ops for this platform

    LCB_IO_OPS_LIBEVENT   Use libevent. +cookie+ may be specified
                          to utilize given event_base.

    LCB_IO_OPS_WINSOCK    Use Windows sockets

    LCB_IO_OPS_LIBEV      Use libev.

+v1+ allows for more flexibility. +sofile+ specifies the shared object
containing the function used to create and initialize the IO
operation. Some runtime linkers allows this parameter to be set to
NULL to search for the object in the current application. +symbol+
contains the name of the function to call to create and initialize the
IO ops structure. The symbol must be a function with the following
signature:

    lcb_error_t create(lcb_io_opt_t *io, const void *cookie);

The function should return the newly created IO ops though the +io+
parameter. The +cookie+ parameter is the same value as specified as
+cookie+ in the +v1+ structure. If successful the function should
return LCB_SUCCESS.

lcb_io_opt_t is a structure defined in <libcouchbase/types.h> with the
following layout:

    struct lcb_io_opt_st {
        int version;
        void *dlhandle;
        void (*destructor)(struct lcb_io_opt_st *iops);
        union {
            struct {
                void *cookie;
                int error;
                int need_cleanup;
                lcb_socket_t (*socket)(struct lcb_io_opt_st *iops,
                                       int domain,
                                       int type,
                                       int protocol);
                int (*connect)(struct lcb_io_opt_st *iops,
                               lcb_socket_t sock,
                               const struct sockaddr *name,
                               unsigned int namelen);
                lcb_ssize_t (*recv)(struct lcb_io_opt_st *iops,
                                    lcb_socket_t sock,
                                    void *buffer,
                                    lcb_size_t len,
                                    int flags);
                lcb_ssize_t (*send)(struct lcb_io_opt_st *iops,
                                    lcb_socket_t sock,
                                    const void *msg,
                                    lcb_size_t len,
                                    int flags);
                lcb_ssize_t (*recvv)(struct lcb_io_opt_st *iops,
                                     lcb_socket_t sock,
                                     struct lcb_iovec_st *iov,
                                     lcb_size_t niov);
                lcb_ssize_t (*sendv)(struct lcb_io_opt_st *iops,
                                     lcb_socket_t sock,
                                     struct lcb_iovec_st *iov,
                                     lcb_size_t niov);
                void (*close)(struct lcb_io_opt_st *iops,
                              lcb_socket_t sock);
                void *(*create_timer)(struct lcb_io_opt_st *iops);
                void (*destroy_timer)(struct lcb_io_opt_st *iops,
                                      void *timer);
                void (*delete_timer)(struct lcb_io_opt_st *iops,
                                     void *timer);
                int (*update_timer)(struct lcb_io_opt_st *iops,
                                    void *timer,
                                    lcb_uint32_t usec,
                                    void *cb_data,
                                    void (*handler)(lcb_socket_t sock,
                                                    short which,
                                                    void *cb_data));
                void *(*create_event)(struct lcb_io_opt_st *iops);
                void (*destroy_event)(struct lcb_io_opt_st *iops,
                                      void *event);
                int (*update_event)(struct lcb_io_opt_st *iops,
                                    lcb_socket_t sock,
                                    void *event,
                                    short flags,
                                    void *cb_data,
                                    void (*handler)(lcb_socket_t sock,
                                                    short which,
                                                    void *cb_data));
                void (*delete_event)(struct lcb_io_opt_st *iops,
                                     lcb_socket_t sock,
                                     void *event);
                void (*stop_event_loop)(struct lcb_io_opt_st *iops);
                void (*run_event_loop)(struct lcb_io_opt_st *iops);
            } v0;
        } v;
    };

If you have questions about the internal layout of this structure
please ask us on IRC (irc.freenode.net) in the #libcouchbase channel

RETURN VALUES
-------------
lcb_create() returns the LCB_SUCCESS on success, or a specific error
code upon failure. See lcb_strerror(3couchbase) for more information.

ATTRIBUTES
----------
See lcb_attributes(5) for descriptions of the following attributes:

[options="header"]
|=======================================
| ATTRIBUTE TYPE      | ATTRIBUTE VALUE
| Interface Stability | Committed
| MT-Level            | MT-Safe
|=======================================

COPYRIGHT
---------
Copyright 2010-2013 Couchbase, Inc.

SEE ALSO
--------
Learn more at <http://www.couchbase.com/communities/c>.

libcouchbase(3lib), lcb_create(3couchbase), lcb_create_compat(3couchbase),
lcb_destroy_io_ops(3couchbase), lcb_attributes(5)
